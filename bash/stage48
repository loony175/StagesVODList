#!/bin/bash
thread=$(grep processor /proc/cpuinfo | wc -l)
let "thread*=4"
GETOPT=`getopt -o j: --long job: -n 'exit' -- "$@"`
eval set -- "$GETOPT"
while true ; do
	case "$1" in
		-j|--job) thread="$2" ; shift 2 ;;
		--) shift ; break ;;
		*) exit 1 ;;
	esac
done
Request(){
	Do(){
		emptyCount=1
		bgCount=1
		path="/Index/invedio/id/$2"
		while true ; do
			if [ $1 == "snh48" ] ; then
				temp=$(curl -s http://zhibo.ckg48.com$path)
			else
				temp=$(curl -s http://live.$1.com$path)
			fi
			response=$(echo "$temp" | grep '<title>')
			if [ -n "$response" ] ; then
				Status=$(echo "$response" | grep -o '502 Bad Gateway')
				if [ ! -n "$Status" ] ; then
					temp=$(echo "$temp" | grep -Po -m 1 'https?://[^"]*\.m3u8[^"]*')
					break
				else
					touch "$2.$bgCount.bg"
					let "bgCount++"
				fi
			else
				touch "$2.$emptyCount.empty"
				let "emptyCount++"
			fi
		done
		echo "$2: $temp"
	}
	export -f Do
	parallel -j "$thread" --bar -k Do ::: "$1" :::: <(seq $2) > "../normal/$3"
	fileList=$(ls -tr1 | tail -n +2)
	echo "$fileList" | while read fileName ; do
		id=$(echo "$fileName" | awk -F "." '{print $1}')
		fileExt=$(echo "$fileName" | awk -F "." '{print $3}')
		if [ $fileExt == "empty" ] ; then
			echo "[$1] $id: Empty response."
		elif [ $fileExt == "bg" ] ; then
			echo "[$1] $id: Server returned 502 Bad Gateway."
		fi
	done
	echo "$2 URL(s) written in ../normal/$3"
	rm *.empty 2>/dev/null
	rm *.bg 2>/dev/null
}
for groupName in snh48 bej48 gnz48 shy48 ckg48 ; do
	case "$groupName" in
		snh48) filename="0001-SNH48.txt" ;;
		bej48) filename="2001-BEJ48.txt" ;;
		gnz48) filename="3001-GNZ48.txt" ;;
		shy48) filename="6001-SHY48.txt" ;;
		ckg48) filename="8001-CKG48.txt" ;;
		*) exit 1 ;;
	esac
	while true ; do
		if [ $groupName == "snh48" ] ; then
			temp=$(curl -s http://zhibo.ckg48.com)
		else
			temp=$(curl -s http://live.$groupName.com)
		fi
		response=$(echo "$temp" | grep '<title>')
		if [ -n "$response" ] ; then
			Status=$(echo "$response" | grep -o '502 Bad Gateway')
			if [ ! -n "$Status" ] ; then
				endID=$(echo "$temp" | grep -Po '/Index/invedio/id/\d+' | grep -Po '\d+' | sort -u | tail -1)
				break
			fi
		fi
	done
	Request "$groupName" "$endID" "$filename"
done
